[{"data":1,"prerenderedAt":581},["ShallowReactive",2],{"content-query-ZhQ5Xqm6yG":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"body":11,"_type":575,"_id":576,"_source":577,"_file":578,"_stem":579,"_extension":580},"/blog/hasura-how-to-pass-dyanamic-expression","blog",false,"","Hasura: How to pass a dynamic expression/condition using GraphQl","How to pass dynamic conditions/expressions to Hasrua GraphQl queries","Tuesday, July 30, 2024",{"type":12,"children":13,"toc":572},"root",[14,22,28,33,136,149,170,177,184,196,208,224,236,241,323,359,364,527,538,557,562,566],{"type":15,"tag":16,"props":17,"children":19},"element","h1",{"id":18},"hasura-how-to-pass-a-dynamic-expressioncondition-using-graphql",[20],{"type":21,"value":8},"text",{"type":15,"tag":23,"props":24,"children":25},"p",{},[26],{"type":21,"value":27},"We had a case in our app where we wanted to give the user ability filter questions by \"answered\" or \"not_answered\" or \"all\".",{"type":15,"tag":23,"props":29,"children":30},{},[31],{"type":21,"value":32},"We have a flag in the questions table called \"is_answered\", it's pretty easy to use it like this",{"type":15,"tag":34,"props":35,"children":39},"pre",{"className":36,"code":37,"language":38,"meta":7,"style":7},"language-gql shiki shiki-themes github-light github-dark monokai","query getQuestions($subjectId: bigint, $is_answered: Boolean = true) {\n  questions(\n    where: {\n      subject_id: { _eq: $subjectId }\n      is_answered: { _eq: $is_answered }\n    }\n  ) {\n    title\n  }\n}\n","gql",[40],{"type":15,"tag":41,"props":42,"children":43},"code",{"__ignoreMap":7},[44,55,64,73,82,91,100,109,118,127],{"type":15,"tag":45,"props":46,"children":49},"span",{"class":47,"line":48},"line",1,[50],{"type":15,"tag":45,"props":51,"children":52},{},[53],{"type":21,"value":54},"query getQuestions($subjectId: bigint, $is_answered: Boolean = true) {\n",{"type":15,"tag":45,"props":56,"children":58},{"class":47,"line":57},2,[59],{"type":15,"tag":45,"props":60,"children":61},{},[62],{"type":21,"value":63},"  questions(\n",{"type":15,"tag":45,"props":65,"children":67},{"class":47,"line":66},3,[68],{"type":15,"tag":45,"props":69,"children":70},{},[71],{"type":21,"value":72},"    where: {\n",{"type":15,"tag":45,"props":74,"children":76},{"class":47,"line":75},4,[77],{"type":15,"tag":45,"props":78,"children":79},{},[80],{"type":21,"value":81},"      subject_id: { _eq: $subjectId }\n",{"type":15,"tag":45,"props":83,"children":85},{"class":47,"line":84},5,[86],{"type":15,"tag":45,"props":87,"children":88},{},[89],{"type":21,"value":90},"      is_answered: { _eq: $is_answered }\n",{"type":15,"tag":45,"props":92,"children":94},{"class":47,"line":93},6,[95],{"type":15,"tag":45,"props":96,"children":97},{},[98],{"type":21,"value":99},"    }\n",{"type":15,"tag":45,"props":101,"children":103},{"class":47,"line":102},7,[104],{"type":15,"tag":45,"props":105,"children":106},{},[107],{"type":21,"value":108},"  ) {\n",{"type":15,"tag":45,"props":110,"children":112},{"class":47,"line":111},8,[113],{"type":15,"tag":45,"props":114,"children":115},{},[116],{"type":21,"value":117},"    title\n",{"type":15,"tag":45,"props":119,"children":121},{"class":47,"line":120},9,[122],{"type":15,"tag":45,"props":123,"children":124},{},[125],{"type":21,"value":126},"  }\n",{"type":15,"tag":45,"props":128,"children":130},{"class":47,"line":129},10,[131],{"type":15,"tag":45,"props":132,"children":133},{},[134],{"type":21,"value":135},"}\n",{"type":15,"tag":23,"props":137,"children":138},{},[139,141,147],{"type":21,"value":140},"by passing ",{"type":15,"tag":41,"props":142,"children":144},{"className":143},[],[145],{"type":21,"value":146},"$is_answered",{"type":21,"value":148}," we can retrieve either the answered or not answered questions. But what if want to retrieve both?",{"type":15,"tag":23,"props":150,"children":151},{},[152,154,160,162,168],{"type":21,"value":153},"We thought we can just by passing ",{"type":15,"tag":41,"props":155,"children":157},{"className":156},[],[158],{"type":21,"value":159},"null",{"type":21,"value":161}," or ",{"type":15,"tag":41,"props":163,"children":165},{"className":164},[],[166],{"type":21,"value":167},"undefined",{"type":21,"value":169}," instrad of a boolean then Hasura will understand and will ignore the whole expression and retieve both, but Hasura throws an error if you do this.",{"type":15,"tag":171,"props":172,"children":174},"h2",{"id":173},"solutions-we-have",[175],{"type":21,"value":176},"Solutions we have:",{"type":15,"tag":178,"props":179,"children":181},"h4",{"id":180},"solution-1-multiple-queries",[182],{"type":21,"value":183},"Solution (1): Multiple queries",{"type":15,"tag":23,"props":185,"children":186},{},[187,189,194],{"type":21,"value":188},"You can have multiple queries, one that has the ",{"type":15,"tag":41,"props":190,"children":192},{"className":191},[],[193],{"type":21,"value":146},{"type":21,"value":195}," parameter, and the other doesn't have it.. this might be okay for small queries or edge cases only, but if you have big queries and you do this, it will be hard to maintain those queries.",{"type":15,"tag":178,"props":197,"children":199},{"id":198},"solution-2-use-boolean-expression-andexp",[200,202],{"type":21,"value":201},"Solution (2): Use boolean expression ",{"type":15,"tag":41,"props":203,"children":205},{"className":204},[],[206],{"type":21,"value":207},"AndExp",{"type":15,"tag":23,"props":209,"children":210},{},[211,213,222],{"type":21,"value":212},"Hasura has several ",{"type":15,"tag":214,"props":215,"children":219},"a",{"href":216,"rel":217},"https://hasura.io/docs/latest/api-reference/graphql-api/query/#andexp",[218],"nofollow",[220],{"type":21,"value":221},"boolean expressions",{"type":21,"value":223}," that you can use them.",{"type":15,"tag":23,"props":225,"children":226},{},[227,229,234],{"type":21,"value":228},"One of them is ",{"type":15,"tag":41,"props":230,"children":232},{"className":231},[],[233],{"type":21,"value":207},{"type":21,"value":235}," we used it to fix this issue by passing the query a dynamic expression as bellow:",{"type":15,"tag":23,"props":237,"children":238},{},[239],{"type":21,"value":240},"We updated our query to be:",{"type":15,"tag":34,"props":242,"children":244},{"className":36,"code":243,"language":38,"meta":7,"style":7},"query getQuestions(\n  $subjectId: bigint\n  $isAnsweredExpression: questions_bool_exp!\n) {\n  questions(\n    where: { subject_id: { _eq: $subjectId }, _and: [$isAnsweredExpression] }\n  ) {\n    title\n  }\n}\n",[245],{"type":15,"tag":41,"props":246,"children":247},{"__ignoreMap":7},[248,256,264,272,280,287,295,302,309,316],{"type":15,"tag":45,"props":249,"children":250},{"class":47,"line":48},[251],{"type":15,"tag":45,"props":252,"children":253},{},[254],{"type":21,"value":255},"query getQuestions(\n",{"type":15,"tag":45,"props":257,"children":258},{"class":47,"line":57},[259],{"type":15,"tag":45,"props":260,"children":261},{},[262],{"type":21,"value":263},"  $subjectId: bigint\n",{"type":15,"tag":45,"props":265,"children":266},{"class":47,"line":66},[267],{"type":15,"tag":45,"props":268,"children":269},{},[270],{"type":21,"value":271},"  $isAnsweredExpression: questions_bool_exp!\n",{"type":15,"tag":45,"props":273,"children":274},{"class":47,"line":75},[275],{"type":15,"tag":45,"props":276,"children":277},{},[278],{"type":21,"value":279},") {\n",{"type":15,"tag":45,"props":281,"children":282},{"class":47,"line":84},[283],{"type":15,"tag":45,"props":284,"children":285},{},[286],{"type":21,"value":63},{"type":15,"tag":45,"props":288,"children":289},{"class":47,"line":93},[290],{"type":15,"tag":45,"props":291,"children":292},{},[293],{"type":21,"value":294},"    where: { subject_id: { _eq: $subjectId }, _and: [$isAnsweredExpression] }\n",{"type":15,"tag":45,"props":296,"children":297},{"class":47,"line":102},[298],{"type":15,"tag":45,"props":299,"children":300},{},[301],{"type":21,"value":108},{"type":15,"tag":45,"props":303,"children":304},{"class":47,"line":111},[305],{"type":15,"tag":45,"props":306,"children":307},{},[308],{"type":21,"value":117},{"type":15,"tag":45,"props":310,"children":311},{"class":47,"line":120},[312],{"type":15,"tag":45,"props":313,"children":314},{},[315],{"type":21,"value":126},{"type":15,"tag":45,"props":317,"children":318},{"class":47,"line":129},[319],{"type":15,"tag":45,"props":320,"children":321},{},[322],{"type":21,"value":135},{"type":15,"tag":23,"props":324,"children":325},{},[326,328,333,335,341,343,349,351,357],{"type":21,"value":327},"We changed ",{"type":15,"tag":41,"props":329,"children":331},{"className":330},[],[332],{"type":21,"value":146},{"type":21,"value":334}," param to ",{"type":15,"tag":41,"props":336,"children":338},{"className":337},[],[339],{"type":21,"value":340},"$isAnsweredExpression",{"type":21,"value":342}," with type: ",{"type":15,"tag":41,"props":344,"children":346},{"className":345},[],[347],{"type":21,"value":348},"questions_bool_exp!",{"type":21,"value":350}," where ",{"type":15,"tag":41,"props":352,"children":354},{"className":353},[],[355],{"type":21,"value":356},"questions",{"type":21,"value":358}," is our table name, you need to update it",{"type":15,"tag":23,"props":360,"children":361},{},[362],{"type":21,"value":363},"Now this is how passed the expression to the query:",{"type":15,"tag":34,"props":365,"children":369},{"className":366,"code":367,"language":368,"meta":7,"style":7},"language-js shiki shiki-themes github-light github-dark monokai","await client.query({\n  fetchPolicy: \"no-cache\",\n  query,\n  variables: {\n    subjectId: 1,\n    isAnsweredExpression:\n      display == \"all\" ? {} : { is_answered: { _eq: display == \"answered\" } }\n  }\n});\n","js",[370],{"type":15,"tag":41,"props":371,"children":372},{"__ignoreMap":7},[373,399,418,426,434,452,460,512,519],{"type":15,"tag":45,"props":374,"children":375},{"class":47,"line":48},[376,382,388,394],{"type":15,"tag":45,"props":377,"children":379},{"style":378},"--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672",[380],{"type":21,"value":381},"await",{"type":15,"tag":45,"props":383,"children":385},{"style":384},"--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[386],{"type":21,"value":387}," client.",{"type":15,"tag":45,"props":389,"children":391},{"style":390},"--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[392],{"type":21,"value":393},"query",{"type":15,"tag":45,"props":395,"children":396},{"style":384},[397],{"type":21,"value":398},"({\n",{"type":15,"tag":45,"props":400,"children":401},{"class":47,"line":57},[402,407,413],{"type":15,"tag":45,"props":403,"children":404},{"style":384},[405],{"type":21,"value":406},"  fetchPolicy: ",{"type":15,"tag":45,"props":408,"children":410},{"style":409},"--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[411],{"type":21,"value":412},"\"no-cache\"",{"type":15,"tag":45,"props":414,"children":415},{"style":384},[416],{"type":21,"value":417},",\n",{"type":15,"tag":45,"props":419,"children":420},{"class":47,"line":66},[421],{"type":15,"tag":45,"props":422,"children":423},{"style":384},[424],{"type":21,"value":425},"  query,\n",{"type":15,"tag":45,"props":427,"children":428},{"class":47,"line":75},[429],{"type":15,"tag":45,"props":430,"children":431},{"style":384},[432],{"type":21,"value":433},"  variables: {\n",{"type":15,"tag":45,"props":435,"children":436},{"class":47,"line":84},[437,442,448],{"type":15,"tag":45,"props":438,"children":439},{"style":384},[440],{"type":21,"value":441},"    subjectId: ",{"type":15,"tag":45,"props":443,"children":445},{"style":444},"--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[446],{"type":21,"value":447},"1",{"type":15,"tag":45,"props":449,"children":450},{"style":384},[451],{"type":21,"value":417},{"type":15,"tag":45,"props":453,"children":454},{"class":47,"line":93},[455],{"type":15,"tag":45,"props":456,"children":457},{"style":384},[458],{"type":21,"value":459},"    isAnsweredExpression:\n",{"type":15,"tag":45,"props":461,"children":462},{"class":47,"line":102},[463,468,473,478,483,488,493,498,502,507],{"type":15,"tag":45,"props":464,"children":465},{"style":384},[466],{"type":21,"value":467},"      display ",{"type":15,"tag":45,"props":469,"children":470},{"style":378},[471],{"type":21,"value":472},"==",{"type":15,"tag":45,"props":474,"children":475},{"style":409},[476],{"type":21,"value":477}," \"all\"",{"type":15,"tag":45,"props":479,"children":480},{"style":378},[481],{"type":21,"value":482}," ?",{"type":15,"tag":45,"props":484,"children":485},{"style":384},[486],{"type":21,"value":487}," {} ",{"type":15,"tag":45,"props":489,"children":490},{"style":378},[491],{"type":21,"value":492},":",{"type":15,"tag":45,"props":494,"children":495},{"style":384},[496],{"type":21,"value":497}," { is_answered: { _eq: display ",{"type":15,"tag":45,"props":499,"children":500},{"style":378},[501],{"type":21,"value":472},{"type":15,"tag":45,"props":503,"children":504},{"style":409},[505],{"type":21,"value":506}," \"answered\"",{"type":15,"tag":45,"props":508,"children":509},{"style":384},[510],{"type":21,"value":511}," } }\n",{"type":15,"tag":45,"props":513,"children":514},{"class":47,"line":111},[515],{"type":15,"tag":45,"props":516,"children":517},{"style":384},[518],{"type":21,"value":126},{"type":15,"tag":45,"props":520,"children":521},{"class":47,"line":120},[522],{"type":15,"tag":45,"props":523,"children":524},{"style":384},[525],{"type":21,"value":526},"});\n",{"type":15,"tag":23,"props":528,"children":529},{},[530,536],{"type":15,"tag":41,"props":531,"children":533},{"className":532},[],[534],{"type":21,"value":535},"display",{"type":21,"value":537}," is the selected option by user it can be \"all\", \"answered\" or \"not_answered\".",{"type":15,"tag":23,"props":539,"children":540},{},[541,543,549,551],{"type":21,"value":542},"if the user chooses \"all\", then we just need send ",{"type":15,"tag":41,"props":544,"children":546},{"className":545},[],[547],{"type":21,"value":548},"{}",{"type":21,"value":550}," and Hasura will ignore your expression and you will get both answered and not answered questions, if the user chooses \"answered\" or \"not_answered\", then you need to send the full expression like this ",{"type":15,"tag":41,"props":552,"children":554},{"className":553},[],[555],{"type":21,"value":556},"{ is_answered: { _eq: true }",{"type":15,"tag":23,"props":558,"children":559},{},[560],{"type":21,"value":561},"Hope this fixes your issue!",{"type":15,"tag":563,"props":564,"children":565},"br",{},[],{"type":15,"tag":567,"props":568,"children":569},"style",{},[570],{"type":21,"value":571},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":7,"searchDepth":57,"depth":57,"links":573},[574],{"id":173,"depth":57,"text":176},"markdown","content:blog:hasura-how-to-pass-dyanamic-expression.md","content","blog/hasura-how-to-pass-dyanamic-expression.md","blog/hasura-how-to-pass-dyanamic-expression","md",1722324183761]